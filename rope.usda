#usda 1.0
(
    customLayerData = {
        dictionary physicsSettings = {
            double "/physics/pickingForce" = 10
        }
    }
    defaultPrim = "World"
    doc = """Generated from Composed Stage of root layer 
"""
    endTimeCode = 100
    metersPerUnit = 0.01
    startTimeCode = 0
    timeCodesPerSecond = 60
    upAxis = "Z"
)

def Xform "World"
{
    def PhysicsScene "physicsScene"
    {
        vector3f physics:gravityDirection = (0, 0, -1)
        float physics:gravityMagnitude = 981
    }

    def Scope "Rope0"
    {
        def PointInstancer "rigidBodyInstancer"
        {
            quath[] orientations = [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)]
            point3f[] positions = [(-148.5, 0, 72.1), (-144, 0, 72.1), (-139.5, 0, 72.1), (-135, 0, 72.1), (-130.5, 0, 72.1), (-126, 0, 72.1), (-121.5, 0, 72.1), (-117, 0, 72.1), (-112.5, 0, 72.1), (-108, 0, 72.1), (-103.5, 0, 72.1), (-99, 0, 72.1), (-94.5, 0, 72.1), (-90, 0, 72.1), (-85.5, 0, 72.1), (-81, 0, 72.1), (-76.5, 0, 72.1), (-72, 0, 72.1), (-67.5, 0, 72.1), (-63, 0, 72.1), (-58.5, 0, 72.1), (-54, 0, 72.1), (-49.5, 0, 72.1), (-45, 0, 72.1), (-40.5, 0, 72.1), (-36, 0, 72.1), (-31.5, 0, 72.1), (-27, 0, 72.1), (-22.5, 0, 72.1), (-18, 0, 72.1), (-13.5, 0, 72.1), (-9, 0, 72.1), (-4.5, 0, 72.1), (0, 0, 72.1), (4.5, 0, 72.1), (9, 0, 72.1), (13.5, 0, 72.1), (18, 0, 72.1), (22.5, 0, 72.1), (27, 0, 72.1), (31.5, 0, 72.1), (36, 0, 72.1), (40.5, 0, 72.1), (45, 0, 72.1), (49.5, 0, 72.1), (54, 0, 72.1), (58.5, 0, 72.1), (63, 0, 72.1), (67.5, 0, 72.1), (72, 0, 72.1), (76.5, 0, 72.1), (81, 0, 72.1), (85.5, 0, 72.1), (90, 0, 72.1), (94.5, 0, 72.1), (99, 0, 72.1), (103.5, 0, 72.1), (108, 0, 72.1), (112.5, 0, 72.1), (117, 0, 72.1), (121.5, 0, 72.1), (126, 0, 72.1), (130.5, 0, 72.1), (135, 0, 72.1), (139.5, 0, 72.1), (144, 0, 72.1)]
            int[] protoIndices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            rel prototypes = </World/Rope0/rigidBodyInstancer/capsule>

            def Capsule "capsule" (
                apiSchemas = ["PhysicsCollisionAPI", "PhysicsRigidBodyAPI", "PhysicsMassAPI", "PhysxCollisionAPI", "MaterialBindingAPI"]
            )
            {
                uniform token axis = "X"
                double height = 3
                rel material:binding:physics = </World/PhysicsMaterial> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                float physics:density = 0.00005
                float physxCollision:contactOffset = 2
                float physxCollision:restOffset = 0
                color3f[] primvars:displayColor = [(0.11764706, 0.23529412, 1)]
                double radius = 1.5
            }
        }

        def PhysxPhysicsJointInstancer "jointInstancer"
        {
            int[] physics:body0Indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
            rel physics:body0s = </World/Rope0/rigidBodyInstancer>
            int[] physics:body1Indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65]
            rel physics:body1s = </World/Rope0/rigidBodyInstancer>
            point3f[] physics:localPos0s = [(2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0), (2.25, 0, 0)]
            point3f[] physics:localPos1s = [(-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0), (-2.25, 0, 0)]
            quath[] physics:localRot0s = [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)]
            quath[] physics:localRot1s = [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)]
            int[] physics:protoIndices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
            rel physics:prototypes = </World/Rope0/jointInstancer/joint>

            def PhysicsJoint "joint" (
                apiSchemas = ["PhysicsLimitAPI:transX", "PhysicsLimitAPI:transY", "PhysicsLimitAPI:transZ", "PhysicsLimitAPI:rotX", "PhysicsLimitAPI:rotY", "PhysicsDriveAPI:rotY", "PhysicsLimitAPI:rotZ", "PhysicsDriveAPI:rotZ"]
            )
            {
                float drive:rotY:physics:damping = 10
                float drive:rotY:physics:stiffness = 1
                uniform token drive:rotY:physics:type = "force"
                float drive:rotZ:physics:damping = 10
                float drive:rotZ:physics:stiffness = 1
                uniform token drive:rotZ:physics:type = "force"
                float limit:rotX:physics:high = -1
                float limit:rotX:physics:low = 1
                float limit:rotY:physics:high = 110
                float limit:rotY:physics:low = -110
                float limit:rotZ:physics:high = 110
                float limit:rotZ:physics:low = -110
                float limit:transX:physics:high = -1
                float limit:transX:physics:low = 1
                float limit:transY:physics:high = -1
                float limit:transY:physics:low = 1
                float limit:transZ:physics:high = -1
                float limit:transZ:physics:low = 1
            }
        }
    }
}

